# ----- dierctories
# installation directory of launchpad arm cross toolchain
BASE=/usr/local/gcc-arm-none-eabi-4_9-2014q4/share/gcc-arm-none-eabi/samples/

# $< bedeuted Eingänge die in die Regel eingehen (Abhängigkeiten)
# $@ bedeuted das Ziel der Regel welches oben angegeben wurde, wird hiermit ersetzt.
# Selecting Core
CORTEX_M=3

# Use newlib-nano. To disable it, specify USE_NANO=
USE_NANO=#--specs=nano.specs
# we need exception handling --> nano.spec does not support exception handlind

# Use seimhosting or not
USE_SEMIHOST=--specs=rdimon.specs
USE_NOHOST=--specs=nosys.specs

CORE=CM$(CORTEX_M)

# Compiler & Linker
CC=arm-none-eabi-gcc
CXX=arm-none-eabi-g++
AS=arm-none-eabi-as
AR=arm-none-eabi-gcc-ar
OBJCOPY=arm-none-eabi-objcopy
SIZE=arm-none-eabi-size

# Options for specific architecture
ARCH_FLAGS=-mthumb -mcpu=cortex-m$(CORTEX_M)

# -Os -flto -ffunction-sections -fdata-sections to compile for code size
CFLAGS=$(ARCH_FLAGS) -Wall
CFLAGS+=-Os -flto -ffunction-sections -fdata-sections
#CFLAGS+=-fno-builtin		# required for retarget
CFLAGS+=-g # debug info on
CFLAGS += -msoft-float -mfloat-abi=soft

#---------------------------------
# LPCopen V2.xx stuff
# directory, includes directories and CFLAGS for LPCopen V2.xx
NXP=./3rdparty/lpc_chip/chip_17xx_40xx
NXPINC+= $(NXP) $(NXP)/../chip_common $(NXP)/config_175x_6x ./3rdparty/CMSIS/Include
CFLAGS+=-DCORE_M3

#------------------------------
#
# Link for code size
GC=-Wl,--gc-sections

# Create map file
MAP=-Wl,-Map=mapfile.map

LDSCRIPT=-T../gcc_lpc1768.ld

#LFLAGS=$(USE_SEMIHOST) $(LDSCRIPT) $(GC) $(MAP)
LFLAGS=$(USE_NANO) $(USE_NOHOST) $(LDSCRIPT) $(GC) $(MAP)
CXXFLAGS=$(CFLAGS)
INCLUDES =$(NXPINC)

#-----------------------
# Create final output file in ihex format from ELF output file (.hex).
%.hex: %.elf
	$(OBJCOPY) -O ihex $< $@
	
